 
#01. Defina Algoritmos. Tente definir com suas pr√≥prias palavras, sem fazer consulta ao material.
"Algoritmos s√£o passos que, ao serem seguidos, geram um determinado resultado."
#02. O que s√£o vari√°veis? Por que s√£o utilizadas em um programa?
"Vari√°veis s√£o dados que podem ter outros valores. Elas s√£o utilizadas para fornecerem diferentes resultados a partir de seus valores poss√≠veis."
#03. O que s√£o tipos de dados?
"Tipos de dados s√£o as diferentes formas que um dado pode representar, como palavras ou n√∫meros."
#04. O que s√£o linguagens de programa√ß√£o? Tente definir com suas pr√≥prias palavras.
"Linguagens de programa√ß√£o s√£o maneiras de traduzir a linguagem de m√°quina de uma forma mais compreensivel, onde diferentes linguagens possuem diferentes focos."
#05. Qual a vantagem do processo de compila√ß√£o e do processo de tradu√ß√£o?
"A vantagem do processo de compila√ß√£o √© a rapidez que o programa pode ser executado visto que n√£o h√° necessidade de tradu√ß√£o intermedi√°ria, e a seguran√ßa do c√≥digo."
"A vantagem do processo de interpretra√ß√£o √© a portabilidade do c√≥digo e a facilidade de depura√ß√£o."
#06. Qual a desvantagem do processo de compila√ß√£o e do processo de tradu√ß√£o?
"A desvantagem do processo de compila√ß√£o √© a n√£o portabilidade do c√≥digo execut√°vel."
"A desvantagem do processo de interpreta√ß√£o √© a sobrecarga de execu√ß√£o e a depend√™ncia de um interpretador."

#07. a, b e c s√£o vari√°veis do tipo inteiro, com valores iguais a 3, 8 e -6, respectivamente, e uma 
# vari√°vel real d, com valor 2,5. Resolva cada uma das express√µes aritm√©ticas abaixo. Lembre-se que 
# math.pow(x, y) significa x^y e, math.sqrt(x) significa ‚àöùíô. Tente resolver os exerc√≠cios sem utilizar a 
# linguagem de programa√ß√£o e o VSCode (tente praticar suas habilidades com os operadores 
#aritm√©ticos).
#a) ‚àíùëê ‚àó 2 ‚àó ùëé % 3 + ùëê
"-(-6) * 2 * 3 % 3 + (-6) -> 36 % 3 -6 -> 0 -6 = -6"
#b) ùëöath.sqrt(‚àí6 ‚àó 4)/4 % ùëè
"‚àö(-6 * 4) / 4 % 8 -> ? "
#c) 30 / ùëé / 2 + ùëöath.pow(8,2) / 2 % ùëê
"30 / 3 / 2 + (8^2) / 2 % (-6) -> 5 + 64 / 2 % (-6) -> 5 + (-2) = 3"
#d) 34%ùëè%5 ‚àó ùëöath.pow(2,3)%ùëè ‚àó ‚àí1/(ùëé + ùëê)
"34 % 8 % 5 * (2^3) % 8 * -1/(3+(-6)) -> 34 % 8 % 5 * 8 % 8 * -1/(-3) -> 2 * 8 % 8 * -1/(-3) -> 0 * -1/(-3) = 0 "
#e) ùëöath.pow(‚àíùëê, 2) + ùëë ‚àó 10 / a
"-(-6)^2 + 2.5 * 10 / 3 -> 36 + 25/3 -> 36 + 8,3 = 44.3"

#08. Linearize as express√µes:
#a) 
"y = 2+a/b-3 -2*x + pow(x,3)"
#b)
"x = (b/a+c+4*a)/(d-2*a/3+c)"
#c)
"x = pow(-b,15)-sqrt(pow(b,2)-4*a*c) / 2*pow(a,2)*sqrt(7*c)"
#d)
"x = pow(b+1,2)+c+a / b+1/2+2*a/pow(b,2)"

#11. Considere as vari√°veis a, b e c do tipo inteiro armazenando os seguintes valores: 4, 5 e 1 
# respectivamente. Avalie (resolva) cada uma das express√µes a seguir.
a = 4
b = 5
c = 1
#a)
b * a - b * b / 4 * c 
"13.75"
#b)
(a*b) / pow(3,2)
"2.22"
#c)
(((b+c) / 2 * a + 10) * 3 * b) - 6
"324"

#12.
#a) 
7 % 2
"1"
#b)
12 % 3
"0"
#c)
0 % 5
"0"
#d)
15 % 5
"0"
#e) 
7 * 10 - 50 % 3 * 4 + 9
"71"
#f) 
(7 * (10-5) % 3) * 4 + 9
"17"